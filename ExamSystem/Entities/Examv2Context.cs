// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace ExamSystem.Entities
{
    public partial class Examv2Context : DbContext
    {
        public Examv2Context()
        {
        }

        public Examv2Context(DbContextOptions<Examv2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Choice> Choice { get; set; }
        public virtual DbSet<Course> Course { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<DepartmentCourse> DepartmentCourse { get; set; }
        public virtual DbSet<Exam> Exam { get; set; }
        public virtual DbSet<Instructor> Instructor { get; set; }
        public virtual DbSet<InstructorCourse> InstructorCourse { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Repo> Repo { get; set; }
        public virtual DbSet<Student> Student { get; set; }
        public virtual DbSet<StudentAnswers> StudentAnswers { get; set; }
        public virtual DbSet<StudentCourse> StudentCourse { get; set; }
        public virtual DbSet<Topic> Topic { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(ConfigurationManager.ConnectionStrings["Examdb"].ConnectionString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Arabic_CI_AS");

            modelBuilder.Entity<Choice>(entity =>
            {
                entity.HasKey(e => new { e.ChoiceId, e.QuestionId })
                    .HasName("PK__Choice__20E83E8ED4BD2C15");

                entity.Property(e => e.ChoiceId).ValueGeneratedOnAdd();

                entity.Property(e => e.ChoiceBody).IsUnicode(false);

                entity.HasOne(d => d.Question)
                    .WithMany(p => p.Choice)
                    .HasForeignKey(d => d.QuestionId)
                    .HasConstraintName("FK__Choice__question__75A278F5");
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.Property(e => e.Name).IsUnicode(false);
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.HasKey(e => e.DeptId)
                    .HasName("PK__Departme__BE2D26D694B512E5");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.Location).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.HasOne(d => d.Manager)
                    .WithMany(p => p.Department)
                    .HasForeignKey(d => d.ManagerId)
                    .HasConstraintName("FK__Departmen__manag__76969D2E");
            });

            modelBuilder.Entity<DepartmentCourse>(entity =>
            {
                entity.HasKey(e => new { e.DeptId, e.CourseId })
                    .HasName("PK__Departme__BC87A229F0F7AB34");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.DepartmentCourse)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Departmen__cours__787EE5A0");

                entity.HasOne(d => d.Dept)
                    .WithMany(p => p.DepartmentCourse)
                    .HasForeignKey(d => d.DeptId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Departmen__deptI__778AC167");
            });

            modelBuilder.Entity<Exam>(entity =>
            {
                entity.HasOne(d => d.Course)
                    .WithMany(p => p.Exam)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Exam__courseID__797309D9");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.HasKey(e => e.InsId)
                    .HasName("PK__Instruct__9D104D8F39600100");

                entity.Property(e => e.Degree).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.HasOne(d => d.Dept)
                    .WithMany(p => p.Instructor)
                    .HasForeignKey(d => d.DeptId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Instructo__deptI__7B5B524B");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Instructor)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Instructo__userI__7A672E12");
            });

            modelBuilder.Entity<InstructorCourse>(entity =>
            {
                entity.HasKey(e => new { e.InsId, e.CourseId })
                    .HasName("PK__Instruct__9FBAC970EFF13D0F");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.InstructorCourse)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Instructo__cours__7D439ABD");

                entity.HasOne(d => d.Ins)
                    .WithMany(p => p.InstructorCourse)
                    .HasForeignKey(d => d.InsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Instructo__InsID__7C4F7684");
            });

            modelBuilder.Entity<Question>(entity =>
            {
                entity.Property(e => e.Body).IsUnicode(false);

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.Question)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Question__course__7E37BEF6");
            });

            modelBuilder.Entity<Repo>(entity =>
            {
                entity.Property(e => e.Correct).IsUnicode(false);

                entity.Property(e => e.ModelAnswer).IsUnicode(false);

                entity.Property(e => e.QuestionBody).IsUnicode(false);

                entity.Property(e => e.StudentAnswer).IsUnicode(false);
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.Property(e => e.StudentId).ValueGeneratedNever();

                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.HasOne(d => d.Dept)
                    .WithMany(p => p.Student)
                    .HasForeignKey(d => d.DeptId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Student__deptID__7F2BE32F");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Student)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Student__userID__00200768");
            });

            modelBuilder.Entity<StudentAnswers>(entity =>
            {
                entity.HasKey(e => new { e.StudentId, e.QuestionId, e.ExamId })
                    .HasName("PK__StudentA__45973607E6A2EF4A");

                entity.HasOne(d => d.Exam)
                    .WithMany(p => p.StudentAnswers)
                    .HasForeignKey(d => d.ExamId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__StudentAn__examI__02FC7413");

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.StudentAnswers)
                    .HasForeignKey(d => d.StudentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__StudentAn__stude__01142BA1");
            });

            modelBuilder.Entity<StudentCourse>(entity =>
            {
                entity.HasKey(e => new { e.StudentId, e.CourseId })
                    .HasName("PK__StudentC__4FBB52A3AD397FF9");

                entity.Property(e => e.Status).IsUnicode(false);

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.StudentCourse)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__StudentCo__cours__04E4BC85");

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.StudentCourse)
                    .HasForeignKey(d => d.StudentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__StudentCo__stude__03F0984C");
            });

            modelBuilder.Entity<Topic>(entity =>
            {
                entity.Property(e => e.TopicName).IsUnicode(false);

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.Topic)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Topic__courseID__05D8E0BE");
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__Users__CB9A1CDF9FE86B71");

                entity.Property(e => e.Password).IsUnicode(false);

                entity.Property(e => e.Type).IsUnicode(false);

                entity.Property(e => e.Username).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}